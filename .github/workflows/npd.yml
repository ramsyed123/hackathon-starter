name: npd

on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v2

      - name: Set up Node.js
        uses: actions/setup-node@v2
        with:
          node-version: '14'

      - name: Install Dependencies
        run: npm install

      - name: Run Unit Tests
        run: npm test

      - name: Build Docker Image
        run: docker build -t node-js-app .

      - name: Push Docker Image to ECR
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_REGION: 'us-west-2'
        run: |
          $(aws ecr get-login --no-include-email --region $AWS_REGION)
          docker tag node-js-app:latest <your-aws-account-id>.dkr.ecr.$AWS_REGION.amazonaws.com/node-js-app:latest
          docker push <your-aws-account-id>.dkr.ecr.$AWS_REGION.amazonaws.com/node-js-app:latest

  deploy:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Set up kubectl
        run: |
          curl -LO "https://storage.googleapis.com/kubernetes-release/release/$(curl -s https://storage.googleapis.com/kubernetes-release/release/stable.txt)/bin/linux/amd64/kubectl"
          chmod +x ./kubectl
          mv ./kubectl /usr/local/bin/kubectl

      - name: Deploy to EKS
        run: |
          aws eks --region us-west-2 update-kubeconfig --name <your-cluster-name>
          kubectl apply -f kubernetes-deployment.yml
